diff --git a/src/index.js b/src/index.js
index 1de3e62..1000ae0 100644
--- a/src/index.js
+++ b/src/index.js
@@ -66,6 +66,14 @@ class Paragraph {
     this._preserveBlank = config.preserveBlank !== undefined ? config.preserveBlank : false;
 
     this.data = data;
+    this.data.column = data.column !== undefined ? data.column : false
+
+    this.settings = [
+      {
+        name: 'column',
+        icon: `<svg width="17" height="10" viewBox="0 0 17 10" xmlns="http://www.w3.org/2000/svg"><path d="M13.568 5.925H4.056l1.703 1.703a1.125 1.125 0 0 1-1.59 1.591L.962 6.014A1.069 1.069 0 0 1 .588 4.26L4.38.469a1.069 1.069 0 0 1 1.512 1.511L4.084 3.787h9.606l-1.85-1.85a1.069 1.069 0 1 1 1.512-1.51l3.792 3.791a1.069 1.069 0 0 1-.475 1.788L13.514 9.16a1.125 1.125 0 0 1-1.59-1.591l1.644-1.644z"/></svg>`
+      }
+    ];
   }
 
   /**
@@ -152,9 +160,9 @@ class Paragraph {
    * @public
    */
   save(toolsContent) {
-    return {
+    return Object.assign(this.data, {
       text: toolsContent.innerHTML
-    };
+    });
   }
 
   /**
@@ -250,6 +258,46 @@ class Paragraph {
       title: 'Text'
     };
   }
+
+  renderSettings(){
+    const wrapper = document.createElement('div');
+
+    this.settings.forEach( tune => {
+      let button = document.createElement('div');
+
+      button.classList.add('cdx-settings-button');
+      button.classList.toggle('cdx-settings-button--active', this.data[tune.name]);
+      button.innerHTML = tune.icon;
+      wrapper.appendChild(button);
+
+      button.addEventListener('click', () => {
+        this._toggleTune(tune.name);
+        button.classList.toggle('cdx-settings-button--active');
+      });
+    });
+
+    return wrapper;
+  }
+
+  /**
+   * @private
+   * Click on the Settings Button
+   * @param {string} tune â€” tune name from this.settings
+   */
+  _toggleTune(tune) {
+    this.data[tune] = !this.data[tune];
+    this._acceptTuneView();
+  }
+
+  /**
+   * Add specified class corresponds with activated tunes
+   * @private
+   */
+  _acceptTuneView() {
+    this.settings.forEach( tune => {
+        this._element.parentElement.parentElement.classList.toggle(tune.name, !!this.data[tune.name]);
+    });
+  }
 }
 
 module.exports = Paragraph;
